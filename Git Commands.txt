Git Init - For initializing a local repository in our local workstation
Git Status - For checking the status on our work in local repository 
Touch - For creating files
Mkdir - For Creating Directories
Git Add "file name" - For adding our changes into the staging area
Git Add . - For adding all the changes into the staging area in one go
Git commit - For commiting the changes in staging area to local repository
git commit -m "Commit Description" - For commiting the changes in staging area to local repository with an inline commit message 
Git commit -am "Commit Description" - Both for adding & commiting the changes to the local repository
Git Log - For checking the history of the commits
Git reset --Hard - For removing the changes that have not been added into the staging area
Git reset --hard "commit id" - For changing the head to the deserved commit.
Git Diff - For checkingthe diffrence b/w the commits
Git Clone URL - For cloning the remote repositoryin to the local workstation and creating a working coppy
Git Pull - For syncing the updated information from remote repository to the local repository
Git merge - For Pulling and merging updated information from remote repository to the local repository
Git Fetch - For checking the diffrence b/w remote repository and the local repository
Git reset --hard Head - For changing the head to the commit.
Git revert
Git rebase - for merging 2 branches
Git rebase -i origin/master - interactive rebasing
Git push origin branch name - For pushing the updated code into the remote repository branch from local working copy
Git push origin branch name -f -Force push
Git reflog - For reffering the history of log
Git stash - For saving the un staged files
Git stash list
Git stash apply - For applying the previos stashes
Git config --list --show-origin 
Git config --global user.email "manideep.koduri09@gmail.com"
Git config --global user.name "Manideep"
Git checkout branch name - for shifting from one branch to another branch
Git revert - Safely Undoing Your Changes
Git revert --hard
Git revert commit id
Git commit --amend -m "Revert adding changes" -For changing the comment of the previous commit
Git revert --abort - Workspace and history end up as they were before the start of git revert
Git Branch -For checking in which you are in
Git Branch checkout branch name -For moving from one branch to another branch
Git Branch branch name - For creating new branch
Git push origin branch name - For pushing the commits to the remote repository to the mentioned branch
Git config --list --show-origin
Git remote -v - To check the origin
Git branch --set-upstream-to=origin/branch name - 
Git Push -u
 